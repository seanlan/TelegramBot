//generated by lazy
//author: seanlan

package service

import (
	"TelegramBot/internal/dao"
	"TelegramBot/internal/dao/sqlmodel"
	"TelegramBot/internal/model"
	"context"
	"gorm.io/gorm/clause"
)

func GetMessagePushList(ctx context.Context, req model.GetMessagePushListReq) (resp model.GetMessagePushListResp, err error) {
	var (
		messageQ = sqlmodel.BotMessagePushColumns
		params   = make([]clause.Expression, 0)
	)
	if req.BotID != 0 {
		params = append(params, messageQ.BotID.Eq(req.BotID))
	}
	resp.Total, err = dao.CountBotMessagePush(ctx, dao.And(params...))
	if err != nil {
		return
	}
	err = dao.FetchAllBotMessagePush(ctx, &resp.List, dao.And(params...), req.Page, req.Size, messageQ.ID.Desc())
	return
}

func SaveMessagePush(ctx context.Context, req model.SaveMessagePushReq) (resp model.SaveMessagePushResp, err error) {
	var messageQ = sqlmodel.BotMessagePushColumns
	message := &sqlmodel.BotMessagePush{
		ID:        req.ID,
		BotID:     req.BotID,
		Content:   req.Content,
		Image:     req.Image,
		Extension: req.Extension,
		StartAt:   req.StartAt,
	}
	_, err = dao.UpsertBotMessagePush(ctx, message,
		dao.M{
			messageQ.BotID.FieldName:     message.BotID,
			messageQ.Content.FieldName:   message.Content,
			messageQ.Image.FieldName:     message.Image,
			messageQ.Extension.FieldName: message.Extension,
			messageQ.StartAt.FieldName:   message.StartAt,
		}, messageQ.ID.FieldName)
	return
}
